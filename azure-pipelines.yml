# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest


stages: # To organize your pipeline into multiple stages, you use the "stages" keyword.
  - stage: Build # name of the stage.
    # Your pipeline may have multiple jobs.
    # In the simplest case, a pipeline has a single job. In that case, you do not have to explicitly use the job keyword.
    # However, you can use the job keyword to specify additional properties on that job.
    jobs:
    - job: Build # name of the job.
      # When your build or deployment runs, the system begins one or more jobs.
      # An agent is an installable software that runs one job at a time.
      # The pool keyword specifies which pool to use for a job of the pipeline.
      # There can be different type of pools.
      # You can specify it at the pipeline, stage, or job level. However, the pool specified at the lowest level of the hierarchy will be used to run the job.
      pool:
        vmImage: 'ubuntu-latest'
      continueOnError: false # The job will not continue on error.
      steps: # Steps consist of tasks that execute in a linear sequence.
        - task: Maven@3 # the name of the task
          inputs: # the inputs of the task
            mavenOptions: '-Xmx3072m' # default maven option
            jdkVersionOption: '1.17' # Java JDK version
            jdkArchitectureOption: 'x64' # Java architecture option. This parameter is optional.
            goals: 'package -Dbuild.version=$(Build.BuildNumber)' # similar to run "mvn package" locally
            mavenPomFile: 'pom.xml' # location of POM file
            publishJUnitResults: true # publish results of JUnit
            testResultsFiles: '**/surefire-reports/TEST-*.xml' # which test files needs to consider for code coverage
            javaHomeOption: 'JDKVersion' # java home path
            mavenVersionOption: 'Default' # maven version
            sonarQubeRunAnalysis: false
        
        - task: PublishPipelineArtifact@1
          inputs:
            # Description: Name of the artifact to be used in next stage
            # TODO: replace <artifact_name> with the name of artifact
            artifactName: buildCode
            # Description: Location of file/folder that needs to shared with the next stage
            # TODO: replace <target_location> with the location of file/folder i.e., the location of source directory
            targetPath: $(Build.SourcesDirectory)
  - stage: Deployment
    dependsOn: Build
    jobs:
    - deployment: production 
      pool:
        vmImage: ubuntu-latest
      environment: Development 
      strategy:
        runOnce: # TODO: replace <strategy_name> with the name of strategy we are using
          deploy:
            steps: # you will complete 1 task in the next subtask
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: AzureSubscriptionConnection 
                  appName: "pet-clinic-dhanrajkotian12"
                  package:  $(Pipeline.Workspace)/buildCode/target/spring-petclinic-3.1.0-SNAPSHOT.jar
                  customDeployFolder: ROOT
                  appType: webAppLinux 
              
